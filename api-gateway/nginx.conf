user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/json;

    # DNS resolver для Docker контейнеров
    resolver 127.0.0.11 valid=30s;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    sendfile on;
    keepalive_timeout 65;

    # GZIP Конфигурация
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Тайм-ауты
    proxy_connect_timeout 10s;
    proxy_send_timeout 10s;
    proxy_read_timeout 10s;
    send_timeout 10s;

    # API Gateway
    server {
        listen 80;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Health-эндпоинт
        location = /health {
            return 200 '{"status":"healthy","message":"API Gateway is running"}';
            add_header Content-Type application/json;
        }

        location ~ ^/api/(auth|training|reference|notes)/health$ {
            set $service $1;
            if ($service = auth) { set $port 8001; }
            if ($service = training) { set $port 8002; }
            if ($service = reference) { set $port 8003; }
            if ($service = notes) { set $port 8004; }
            proxy_pass http://$service-service:$port/api/health;
        }

        # Swagger UI эндпоинт
        location ~ ^/api/(auth|training|reference|notes)/api-docs(/.*)?$ {
            set $service $1;
            if ($service = auth) { set $port 8001; }
            if ($service = training) { set $port 8002; }
            if ($service = reference) { set $port 8003; }
            if ($service = notes) { set $port 8004; }
            proxy_pass http://$service-service:$port/api-docs$3;
        }

        # Auth Service - /api/auth/* and /api/users/*
        location ~ ^/api/(auth|users)(/.*)?$ {
            proxy_pass http://auth-service:8001/api/$1$2;
        }

        # Training Service - /api/training/* (все вложенные маршруты)
        location ~ ^/api/training(/.*)?$ {
            proxy_pass http://training-service:8002/api/training$1;
        }

        # Reference Service - /api/reference/*, /api/exercises/*, /api/targets/*, /api/weapon-types/*
        location ~ ^/api/(reference|exercises|targets|weapon-types)(/.*)?$ {
            proxy_pass http://reference-service:8003/api/$1$2;
        }

        # Notes Service - /api/notes/*, /api/series-notes/*, /api/training-notes/*
        location ~ ^/api/(notes|series-notes|training-notes)(/.*)?$ {
            proxy_pass http://notes-service:8004/api/$1$2;
        }

        # Prometheus и Grafana
        location /prometheus/ {
            proxy_pass http://prometheus:9090/;
            proxy_read_timeout 300;
            proxy_connect_timeout 300;
            rewrite ^/prometheus/(.*)$ /$1 break;
        }

        location /grafana/ {
            proxy_pass http://grafana:3000/;
            proxy_read_timeout 300;
            proxy_connect_timeout 300;
            rewrite ^/grafana/(.*)$ /$1 break;
        }


    }
} 