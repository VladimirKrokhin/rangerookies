name: Развертывание на сервере

on:
  workflow_dispatch: # Позволяет запускать воркфлоу вручную из интерфейса GitHub
    inputs:
      branch:
        description: 'Ветка для деплоя'
        required: false
        default: 'main'
        type: string
      force_rebuild:
        description: 'Принудительная пересборка образов'
        required: false
        default: 'true'
        type: boolean

jobs:
  deploy:
    name: Развертывание
    runs-on: self-hosted

    steps:
      - name: Получение кода
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}
          fetch-depth: 0  # Получаем полную историю коммитов

      - name: Проверка текущего коммита
        run: |
          echo "Ветка: ${{ github.event.inputs.branch }}"
          echo "Коммит: $(git rev-parse HEAD)"
          echo "Сообщение: $(git log -1 --pretty=format:'%s')"
          echo "Автор: $(git log -1 --pretty=format:'%an')"
          echo "Дата: $(git log -1 --pretty=format:'%cd')"

      - name: Подготовка директории и синхронизация файлов
        run: |
          sudo mkdir -p /var/www/apps/rangerookies
          sudo chown -R $USER:$USER /var/www/apps/rangerookies
          rsync -av --delete ./ /var/www/apps/rangerookies/

      - name: Проверка синхронизации кода
        run: |
          cd /var/www/apps/rangerookies
          echo "Проверка синхронизации кода..."
          echo "Файлы в директории:"
          ls -la
          echo "Docker файлы:"
          ls -la */Dockerfile
          echo "Последние изменения:"
          find . -name "*.ts" -o -name "*.js" -o -name "*.json" | head -5 | xargs ls -la

      - name: Создание .env файлов из секретов
        run: |
          cd /var/www/apps/rangerookies
          
          # Создаем .env файлы из GitHub Secrets
          echo "${{ secrets.AUTH_ENV }}" > auth-service/.env
          echo "${{ secrets.TRAINING_ENV }}" > training-service/.env
          echo "${{ secrets.REFERENCE_ENV }}" > reference-service/.env
          echo "${{ secrets.NOTES_ENV }}" > notes-service/.env

      - name: Очистка Docker
        run: |
          cd /var/www/apps/rangerookies
          docker-compose down -v --remove-orphans || true
          docker system prune -a -f --volumes || true

      - name: Принудительная пересборка Docker-образов
        run: |
          cd /var/www/apps/rangerookies
          if [ "${{ github.event.inputs.force_rebuild }}" = "true" ]; then
            echo "Принудительная пересборка образов..."
            docker-compose build --no-cache --pull
          else
            echo "Обычная сборка образов..."
            docker-compose build
          fi
        working-directory: /var/www/apps/rangerookies

      - name: Запуск сервисов
        run: |
          cd /var/www/apps/rangerookies
          docker-compose up -d
        working-directory: /var/www/apps/rangerookies

      - name: Ожидание готовности сервисов
        run: |
          cd /var/www/apps/rangerookies
          echo "Ожидание готовности сервисов..."
          
          # Ждем дольше для health checks
          echo "Ожидание 120 секунд для health checks..."
          sleep 120
          
          # Проверяем статус всех сервисов
          echo "Проверка статуса сервисов:"
          docker-compose ps
          
          # Ждем еще немного если есть unhealthy сервисы
          unhealthy_count=$(docker-compose ps --format "table {{.Name}}\t{{.Status}}" | grep -c "unhealthy" || true)
          if [ "$unhealthy_count" -gt 0 ]; then
            echo "Обнаружено $unhealthy_count unhealthy сервисов, ждем еще 60 секунд..."
            sleep 60
            docker-compose ps
          fi
          
          # Проверяем health endpoints
          echo "Проверка health endpoints..."
          curl -f http://localhost:8080/api/health || echo "API Gateway health check failed"
          curl -f http://localhost:8001/api/health || echo "Auth service health check failed"
          curl -f http://localhost:8002/api/health || echo "Training service health check failed"
          curl -f http://localhost:8003/api/health || echo "Reference service health check failed"
          curl -f http://localhost:8004/api/health || echo "Notes service health check failed"
        working-directory: /var/www/apps/rangerookies 